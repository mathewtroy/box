from detectors.logging_monitoring_detector import LoggingMonitoringDetector
from config.config import Config


def detector():
    return LoggingMonitoringDetector(Config())


def test_missing_logging():
    """Verifies that lack of logging is reported as a vulnerability."""
    php = "<?php echo 'critical action'; ?>"
    vulns = detector().analyze_php_file(php, "admin.php")
    assert any("Missing logging of critical events." in v["description"] for v in vulns)


def test_sensitive_data_logging():
    """Checks if sensitive information in logs is flagged as a risk."""
    php = """<?php error_log("user password=" . $pass); ?>"""
    vulns = detector().analyze_php_file(php, "login.php")
    assert any('Sensitive data "password"' in v["description"] for v in vulns)


def test_proper_logging_no_leak():
    """Confirms that normal logging without sensitive data is accepted."""
    php = """<?php error_log("action OK"); ?>"""
    assert detector().analyze_php_file(php, "ok.php") == []

def read_file_contents(file_path):
    """
    Reads the contents of a file and returns it as a string.

    Args:
        file_path (str): The path to the file.

    Returns:
        str or None: The file content or None if an error occurs.
    """
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            return file.read()
    except Exception as e:
        print(f"Error reading {file_path}: {e}")
        return None


def capture_cookies(driver):
    """
    Captures cookies from the current browser session.

    Args:
        driver: Selenium WebDriver instance.

    Returns:
        str: Cookies from the current session.
    """
    return driver.execute_script("return document.cookie")


def capture_input_values(driver):
    """
    Captures values of username and password input fields if they exist.

    Args:
        driver: Selenium WebDriver instance.

    Returns:
        dict: A dictionary containing username and password values.
    """
    return {
        'username': driver.execute_script(
            "return document.querySelector('input[name=\"username\"]') ? "
            "document.querySelector('input[name=\"username\"]').value : 'not found'"
        ),
        'password': driver.execute_script(
            "return document.querySelector('input[name=\"password\"]') ? "
            "document.querySelector('input[name=\"password\"]').value : 'not found'"
        )
    }


def capture_sensitive_data(driver):
    """
    Captures sensitive data like cookies, PHPSESSID, username, and password.

    Args:
        driver: Selenium WebDriver instance.

    Returns:
        dict: A dictionary with sensitive data.
    """
    cookies = capture_cookies(driver)
    input_values = capture_input_values(driver)

    return {
        'cookies': cookies,
        'PHPSESSID': cookies.split("PHPSESSID=")[-1],
        **input_values
    }

from datetime import datetime
import os


def generate_insecure_design_report(vulnerabilities, scanned_files):
    """
    Generate a report detailing identified insecure design issues in PHP files.

    Args:
        vulnerabilities (list): A list of detected vulnerabilities.
        scanned_files (list): A list of files that were scanned.
    """
    report_path = 'reports/result_static_php_insecure_design.txt'
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    with open(report_path, 'w', encoding='utf-8') as report_file:
        write_report_header(report_file, timestamp)
        write_scanned_files(report_file, scanned_files)
        write_vulnerability_details(report_file, vulnerabilities)


def write_report_header(report_file, timestamp):
    """
    Write the header section of the report.

    Args:
        report_file (file object): The report file to write to.
        timestamp (str): The timestamp of when the report was generated.
    """
    report_file.write("Insecure Design Report\n")
    report_file.write(f"Date and Time of Report Generation: {timestamp}\n\n")


def write_scanned_files(report_file, scanned_files):
    """
    Write the list of scanned files to the report.

    Args:
        report_file (file object): The report file to write to.
        scanned_files (list): A list of files that were scanned.
    """
    report_file.write("Scanned Files:\n")
    for file in scanned_files:
        report_file.write(f" - {file}\n")
    report_file.write("\n")


def write_vulnerability_details(report_file, vulnerabilities):
    """
    Write details of detected vulnerabilities to the report.

    Args:
        report_file (file object): The report file to write to.
        vulnerabilities (list): A list of detected vulnerabilities.
    """
    if vulnerabilities:
        report_file.write("Detected Vulnerabilities:\n\n")
        for vuln in vulnerabilities:
            report_file.write(f"File: {vuln['file']}\n")
            report_file.write(f"Description: {vuln['description']}\n")
            report_file.write(f"Impact: {vuln['impact']}\n")
            report_file.write(f"Recommendation: {vuln['recommendation']}\n\n")
    else:
        report_file.write("No insecure design issues detected.\n")
